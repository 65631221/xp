#!/usr/bin/env python
# coding: utf-8

import telebot
from aliexpress_api import AliexpressApi, models
import re
import requests, json
from urllib.parse import urlparse, parse_qs

bot = telebot.TeleBot('7538639989:AAE6lQKTyL0F_8wKHKtuKx5m6hGXVdTOszo')

aliexpress = AliexpressApi('514274', 'kZ94O1p3er1qXL8zCo3AgZpWDxxH9Wzv',
                           models.Language.EN, models.Currency.EUR, 'default')

# الرسالة الثابتة للإستفسار
support_message = "\n\nلأي استفسار أو توفير دفع : @ayman_homam"

@bot.message_handler(commands=['start'])
def welcome_user(message):
    bot.send_message(
        message.chat.id,
        "مرحبا بك، ارسل لنا رابط المنتج الذي تريد شرائه لنوفر لك افضل سعر له 👌"
        + support_message)

def extract_link(text):
    link_pattern = r'https?://\S+|www\.\S+'
    links = re.findall(link_pattern, text)
    if links:
        return links[0]

def get_url_params(link):
    parsed_url = urlparse(link)
    params = parse_qs(parsed_url.query)
    return params

def create_query_string_url(link, params):
    import urllib.parse
    return link + urllib.parse.urlencode(params)

def build_shopcart_link(link):
    params = get_url_params(link)
    shop_cart_link = "https://www.aliexpress.com/p/trade/confirm.html?"
    shop_cart_params = {
        "availableProductShopcartIds": ",".join(params["availableProductShopcartIds"]),
        "extraParams": json.dumps({"channelInfo": {"sourceType": "620"}}, separators=(',', ':'))
    }
    return create_query_string_url(shop_cart_link, shop_cart_params)

def get_affiliate_shopcart_link(link, message):
    try:
        shopcart_link = build_shopcart_link(link)
        affiliate_link = aliexpress.get_affiliate_links(shopcart_link)[0].promotion_link

        text2 = f"هذا رابط تخفيض السلة:\n{affiliate_link}" + support_message

        img_link = "https://i.postimg.cc/HkMxWS1T/photo-5893070682508606111-y.jpg"
        bot.send_photo(message.chat.id, img_link, caption=text2)

    except:
        bot.send_message(message.chat.id, "حدث خطأ 🤷🏻‍♂️" + support_message)

def get_affiliate_links(message, message_id, link):
    try:
        limit_links = aliexpress.get_affiliate_links(
            f'https://star.aliexpress.com/share/share.htm?platform=AE&businessType=ProductDetail&redirectUrl={link}?sourceType=561&aff_fcid='
        )[0].promotion_link

        try:
            product = aliexpress.get_products_details([
                '1000006468625',
                f'https://star.aliexpress.com/share/share.htm?platform=AE&businessType=ProductDetail&redirectUrl={link}'
            ])[0]

            price = product.target.sale_price
            title = product.product_title
            img_link = product.product_main_image_url

            bot.delete_message(message.chat.id, message_id)
            bot.send_photo(message.chat.id, img_link,
                           caption=f"🛒 منتجك: 🔥\n{title}\n"
                                   f"💵 السعر: {price} دولار\n\n"
                                   f"♨️ رابط العرض المحدود:\n{limit_links}"
                                   + support_message)

        except:
            bot.delete_message(message.chat.id, message_id)
            bot.send_message(message.chat.id,
                             f"♨️ عرض محدود:\n{limit_links}"
                             + support_message)

    except:
        bot.send_message(message.chat.id, "حدث خطأ 🤷🏻‍♂️" + support_message)

@bot.message_handler(func=lambda message: True)
def get_link(message):
    link = extract_link(message.text)

    sent_message = bot.send_message(message.chat.id,
                                    'المرجو الانتظار قليلا، يتم تجهيز العروض ⏳')
    message_id = sent_message.message_id
    if link and "aliexpress.com" in link and not ("p/shoppingcart" in message.text.lower()):
        if "availableProductShopcartIds" in message.text.lower():
            get_affiliate_shopcart_link(link, message)
        else:
            get_affiliate_links(message, message_id, link)
    else:
        bot.delete_message(message.chat.id, message_id)
        bot.send_message(message.chat.id,
                         "الرابط غير صحيح! تأكد من رابط المنتج أو أعد المحاولة.\n"
                         "أرسل فقط الرابط بدون كتابة إضافية."
                         + support_message)

# لتشغيل البوت بدون توقف
def keep_alive():
    pass  # احذفها لو عندك سيرفر خارجي يحافظ على تشغيل البوت

bot.infinity_polling(timeout=10, long_polling_timeout=5)
